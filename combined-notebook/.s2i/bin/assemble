#!/bin/bash

set -eo pipefail

# Ensure we are using the latest pip and wheel packages.
apt-get update && apt-get install python python3 python3-pip cmake make wget curl bzip2 build-essential zlib1g-dev subversion texinfo git -y
pip3 install --upgrade pip

pip3 install -U pip setuptools wheel

# Install base packages needed for running Jupyter Notebooks. 

pip3 install -r /tmp/src/requirements.txt

# Install cling for c++ kernels
mkdir -p cling && cd cling/
curl -O https://root.cern.ch/download/cling/cling_2017-11-13_ubuntu16.tar.bz2 #  or `curl -O <url>`
tar xf cling*
cd cling_2017-11-13_ubuntu16
rm ../cling_2017-11-13_ubuntu16.tar.bz2
cp -R * /usr/local/
cd /usr/local/share/cling/Jupyter/kernel/
pip3 install -e .
jupyter-kernelspec install cling-cpp11
jupyter-kernelspec install cling-cpp14
jupyter-kernelspec install cling-cpp17
# Activate JupyterHub extension for JupyterLab.

#jupyter labextension install @jupyterlab/hub-extension

# Install anaconda python
cd ~
wget https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh
bash Anaconda3-5.0.1-Linux-x86_64.sh -b -p /usr/local/share/conda
export PATH="$HOME/conda/bin:$PATH"

# Install scijava jupyter kernel
conda config --add channels conda-forge
conda create --name java_env scijava-jupyter-kernel
source activate java_env

# List all kernels to make sure everything is installed
echo "List of installed jupyter kernels:"
jupyter kernelspec list


# Create a profile for the notebook. Add code for setting password for
# the notebook from an environment variable.

jupyter notebook --generate-config

cat >> $HOME/.jupyter/jupyter_notebook_config.py << EOF
import os
password = os.environ.get('JUPYTER_NOTEBOOK_PASSWORD')
if password:
    import notebook.auth
    c.NotebookApp.password = notebook.auth.passwd(password)
    del password
    del os.environ['JUPYTER_NOTEBOOK_PASSWORD']
EOF

# This S2I assemble script is only used when creating the custom image.
# For when running the image, or using it as a S2I builder, we use a second
# set of custom S2I scripts. We now need to move these into the correct
# location and have the custom image use those by dropping in an image
# metadata file which overrides the labels of the base image.

mkdir -p /tmp/.s2i

mv /tmp/src/builder/image_metadata.json /tmp/.s2i/image_metadata.json
mkdir -p /opt/app-root/
mv /tmp/src/builder /opt/app-root/builder

rm -rf /tmp/src

# Ensure passwd/group file intercept happens for any shell environment.

